
@{
    ViewBag.Title = "Task5";
}

<div>
    <input onchange="readURL(this);" type="file" id="fileUpload">
    <button type="button" class="btn btn-primary" onclick="s3upload()">Submit</button>
</div>
<progress class="col-md-12" max="100" value="0"></progress>
<img id="changeImage" />
<p id="displayURL"></p><a id="newlink"></a>
<div>
    <div id="snackbar">Retrying...</div>
</div>
<style>
    #snackbar {
        visibility: hidden;
        min-width: 250px;
        margin-left: -125px;
        background-color: #333;
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 16px;
        position: fixed;
        z-index: 1;
        left: 50%;
        top: 70px;
        font-size: 17px;
    }

    #changeImage {
        height: 30%;
        width: 30%;
    }

    #fileUpload {
        margin: 0;
    }
</style>
<script src="https://sdk.amazonaws.com/js/aws-sdk-2.1.24.min.js"></script>
<script type="text/javascript">
    //Bucket Configurations
    var bucketName = "*";
    var bucketRegion = "*";
    var IdentityPoolId = "*";

    AWS.config.update({
        region: bucketRegion,
        credentials: new AWS.CognitoIdentityCredentials({
            IdentityPoolId: IdentityPoolId
        })
    });

    var s3 = new AWS.S3({
        apiVersion: '2006-03-01',
        params: { Bucket: bucketName }
    });

    function s3upload() {
        var files = document.getElementById('fileUpload').files;
        if (files) {
            var file = files[0];
            var fileName = file.name;
            var filePath = 'my-first-bucket-path/' + fileName;
            var fileUrl = 'https://' + bucketRegion + '.amazonaws.com/my-first-bucket/' + filePath;
            s3.upload({
                Key: filePath,
                Body: file,
                ACL: 'public-read'
            }, function (err, data) {
                if (err) {
                    reject('error');
                }
                alert('Successfully Uploaded!');
                shortenUrl(data.Location);
            }).on('httpUploadProgress', function (progress) {
                var uploaded = parseInt((progress.loaded * 100) / progress.total);
                $("progress").attr('value', uploaded);
            });
        }
    };
    function shortenUrl(url) {
        var accessToken = "*";
        var params = {
            "long_url": url
        };
        $.ajax({
            url: "https://api-ssl.bitly.com/v4/shorten",
            cache: false,
            dataType: "json",
            method: "POST",
            contentType: "application/json",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("Authorization", "Bearer " + accessToken);
            },
            data: JSON.stringify(params)
        }).done(function (data) {
            document.getElementById('snackbar').style.visibility = "hidden";
            $('#displayURL').text(`Your Bitly URL is`);
            $('#newlink').text(`${data.link}`);
            $('#newlink').attr('href', `${data.link}`);
        }).fail(function (data) {
            document.getElementById('snackbar').style.visibility = "visible";
            console.log(data);
            setTimeout(function () {
                shortenUrl(url);
            }, 1000);
            alert("Fail to retrieve data");
        });
    }

    //Displaying picture
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#changeImage')
                    .attr('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>